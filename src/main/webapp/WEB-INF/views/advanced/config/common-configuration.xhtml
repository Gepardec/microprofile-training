<ui:composition template="/WEB-INF/layout/layout.xhtml" xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html">

    <ui:define name="header">
        Config Advanced (Common ConfigSource)
    </ui:define>

    <ui:define name="body">
        <section>
            <div class="container-lg">
                <div class="row my-2">
                    <div class="col">
                        <div class="text-center">
                            <h1>Configuration from common configuration</h1>
                        </div>
                    </div>
                </div>

                <div class="row my-2">
                    <div class="col">
                        <p>
                            The specification for MicroProfile
                            <a href="#{mpUri.configUri}#config"
                               target="_blank">
                                Config.
                            </a>
                        </p>

                        <p>
                            Within your application, you can provide the configuration to a seperate JAR (e.g. some framework).
                        </p>

                        <hr class="my-3"/>
                    </div>
                </div>

                <div class="row my-2">
                    <div class="col">
                        <h4>
                            Your Task:
                        </h4>

                        <p>
                            Take a look at the module
                            <code>config/common-configuration</code>. There, the class
                            <code>com.gepardec.training.microprofile.common.ConfigurableBean</code> uses the ConfigProperty
                            <code>common.key</code> which is provided by the config-file
                            <code>config\common-configuration\src\main\resources\META-INF\microprofile-config.properties</code>.
                        </p>
                            You task is to:
                            <ul>
                                <li>include the common-configuration JAR in your application</li>
                                <li>inject the ConfigurableBean in the <code>com.gepardec.training.microprofile.advanced.config.CommonConfigurationSourceController</code></li>
                                <li>call the doWork method of the ConfigurableBean in the callWorkHere method of CommonConfigurationSourceController</li>
                                <li>override the value from <code>config/common-configuration</code> with a configuration value from our application</li>
                            </ul>
                        <p>
                        Therefore, provide the common-configuration JAR so that the configuration is present in this application and inject the CommonConfigurationBean:</p>
                        <ol>
                            <li>build the common-configuration JAR (<code>mvn clean install</code>)</li>
                            <li>add the common-configuration-dependency
                                to the <code>pom.xml</code> of the main application
                            </li>
                            <li>build the main application (<code>mvn clean install</code>)</li>
                            <li>deploy the main application</li>
                        </ol>
                        <p>
                            Then, override the value of
                            <code>common.key</code> in another way than in <code>config/common-configuration</code>.
                        </p>


                        <hr class="my-3"/>

                        <div class="row my-1">
                            <div class="col text-center">
                                Value:
                            </div>
                            <div class="col text-center">
                                <h:outputText value="${work}" class="font-weight-bold" />
                            </div>
                        </div>

                        <hr class="my-3"/>
                    </div>
                </div>
            </div>
        </section>
    </ui:define>
</ui:composition>
