<ui:composition template="/WEB-INF/layout/layout.xhtml" xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:tag="http://tags.microprofile.training.gepardec.com">

    <ui:define name="title">
        Health Basic (Database HealthCheck)
    </ui:define>

    <ui:define name="body">
        <section>
            <div class="container-lg">
                <div class="row my-2">
                    <div class="col">
                        <div class="text-center">
                            <h1>Database HealthCheck</h1>
                        </div>
                    </div>
                </div>

                <div class="row my-2">
                    <div class="col">
                        <p>
                            The specification for MicroProfile
                            <a href="#{mpUri.healthUri}#health"
                                target="_blank">
                                Health.
                            </a>
                        </p>

                        <p>
                            There is a database included in our infrastructure.
                            If an application uses a database its a good idea to run a database health check.
                        </p>
                        <p>
                            Depending on the scenario it can be a liveness or readiness check, this is quite a tough decision to make.
                        </p>
                        <p>
                            Should our application be ready when our database is not available?
                            Should our application be killed if we can not reach our database?
                        </p>

                        <hr class="my-3" />
                    </div>
                </div>

                <div class="row my-2">
                    <div class="col">
                        <h4>
                            Your Task:
                        </h4>

                        <p>
                            For now we implement a readiness check for our database named "Database".
                            Use the <code>com.gepardec.training.microprofile.common.health.HealthHelper.databaseHealth</code> method for checking the health of the database.
                        </p>

                        <p>
                            Shut down your your database (<code>docker stop infrastructure_postgres_1</code>) and see how the readiness check's state changes.
                        </p>

                        <p>
                            In a second step, cache the database health result for 30 seconds and see how the actual database status and the health check status diverge.
                            Don't forget to start your database again (<code> docker start infrastructure_postgres_1</code>).
                        </p>

                        <hr class="my-3" />
                    </div>
                </div>

                <div class="row my-2">
                    <div class="col">
                        <div class="row my-2">
                            <div class="col">
                                <tag:healthStatus healthCheckResults="${readinessCheckResults}" />
                                <hr class="my-3" />
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row my-2">
                    <div class="col">
                        <div class="row">
                            <div class="col text-center">
                                Database Status:
                            </div>
                            <div class="col text-center">
                                <h:outputText value="${stateMessageDB}" class="alert-warning" />
                            </div>
                        </div>
                    </div>
                    <hr class="my-3" />
                </div>
            </div>
        </section>
    </ui:define>
</ui:composition>
