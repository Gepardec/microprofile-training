<ui:composition template="/WEB-INF/layout/layout.xhtml" xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
    xmlns:tag="http://tags.microprofile.training.gepardec.com">

    <ui:define name="headerText">
        Microprofile Basics
    </ui:define>

    <ui:define name="additionalNavLink">
        <tag:navLink id="toWelcome" path="/welcome" text="Back"><i class="fas fa-step-backward" /></tag:navLink>
    </ui:define>

    <ui:define name="body">
        <section>
            <tag:card id="mp-config" title="Microprofile Config">
                <ui:define name="body">
                    <p>
                        Microprofile Config facilitates the configuration of an application. With the following
                        examples, you will configure this application in several ways and see how you can use the
                        configured values. In two examples, these configured values will be mapped and converted into
                        specific target types or even aggregated into a property class. Furthermore, you will handle
                        empty configurations which, by default, lead to exceptions.
                        ...
                    </p>
                </ui:define>
                <ui:define name="buttons">
                    <tag:button id="toConfigExamples" text="Examples" path="/basic/config/index" />
                </ui:define>
            </tag:card>

            <tag:card id="mp-health" title="Microprofile Health">
                <ui:define name="body">
                    <p>
                        ...
                    </p>
                </ui:define>
                <ui:define name="buttons">
                    <tag:button id="toExampleHealth" text="Go to example" path="#" />
                </ui:define>
            </tag:card>

            <tag:card id="mp-restClient" title="Microprofile RestClient">
                <ui:define name="body">
                    <p>
                        ...
                    </p>
                    The specification for Microprofile
                    <a href="https://download.eclipse.org/microprofile/microprofile-config-2.0/microprofile-config-spec-2.0.html#config"
                        target="_blank">
                        Config.
                    </a>
                </ui:define>
                <ui:define name="buttons">
                    <tag:button id="toRestClientExamples" text="Examples" path="/basic/restclient/index" />
                </ui:define>
            </tag:card>
            <tag:card id="mp-openapi" title="Microprofile OpenAPI">
                <ui:define name="body">
                    <p>
                        With Microprofile OpenAPI you will generate OpenAPI v3 documents which are representing rest services.
                        From these you will generate again Java Ressources. To make this process more comfortable you will learn
                        about OAS3 annotations, OASModelReaders and OASFilters.
                    </p>
                    The specification for Microprofile
                    <a href="https://download.eclipse.org/microprofile/microprofile-open-api-1.1.2/microprofile-openapi-spec.html"
                       target="_blank">
                        OpenAPI.
                    </a>
                </ui:define>
                <ui:define name="buttons">
                    <tag:button id="toOpenAPIExamples" text="Examples" path="/basic/openapi/index" />
                </ui:define>
            </tag:card>
        </section>
    </ui:define>
</ui:composition>

