<ui:composition template="/WEB-INF/layout/layout.xhtml" xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
    xmlns:tag="http://tags.microprofile.training.gepardec.com">

    <ui:define name="title">
        Microprofile Basics
    </ui:define>

    <ui:define name="additionalNavLink">
        <tag:navLink id="toWelcome" path="/welcome" text="Back"><i class="fas fa-step-backward" /></tag:navLink>
    </ui:define>

    <ui:define name="body">
        <section>
            <tag:card id="mp-config" title="Microprofile Config">
                <ui:define name="body">
                    <p>
                        Microprofile Config facilitates the configuration of an application. With the following
                        examples, you will configure this application in several ways and see how you can use the
                        configured values. In two examples, these configured values will be mapped and converted into
                        specific target types or even aggregated into a property class. Furthermore, you will handle
                        empty configurations which, by default, lead to exceptions.
                    </p>
                    The specification for Microprofile
                    <a href="https://download.eclipse.org/microprofile/microprofile-config-2.0/microprofile-config-spec-2.0.html#config"
                        target="_blank">
                        Config.
                    </a>
                </ui:define>
                <ui:define name="buttons">
                    <tag:button id="toConfigExamples" text="Examples" path="/basic/config/index" />
                </ui:define>
            </tag:card>
        </section>

        <section>
            <tag:card id="mp-faulttolerance" title="Microprofile Fault Tolerance">
                <ui:define name="body">
                    <p>
                        The Microprofile Fault Tolerance specification emerged from the Netflix-Hystrixs project and facilitates the resilience of a service.
                        The Microprofile Fault Tolerance specification contains multiple functionalities for handling common problems in a distributed service environment such as:
                    </p>

                    <ul>
                        <li><code>@Asnychronous</code> for asynchronous invocations of methods</li>
                        <li><code>@Fallback</code> for fallback results of methods which invocations fail</li>
                        <li><code>@Timeout</code> for limiting method invocation durations</li>
                        <li><code>@Retry</code> for retry behaviour of methods temporarly failing</li>
                        <li><code>@Bulkhead</code> for limiting concurrrent method invocations</li>
                        <li><code>@CircuitBreaker</code> for preventing method invocations of method frequently failing</li>
                    </ul>
                    The specification for Microprofile
                    <a href="#{mpUri.faultToleranceUri}"
                        target="_blank">
                        Fault Tolerance.
                    </a>
                </ui:define>
                <ui:define name="buttons">
                    <tag:button id="toFaultToleranceExamples" text="Examples" path="/basic/faulttolerance/index" />
                </ui:define>
            </tag:card>
        </section>
    </ui:define>
</ui:composition>

