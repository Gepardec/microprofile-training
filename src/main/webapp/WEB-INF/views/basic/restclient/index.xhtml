<ui:composition template="/WEB-INF/layout/layout.xhtml" xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:tag="http://tags.microprofile.training.gepardec.com">
    <ui:define name="title">
        <title>RestClient</title>
    </ui:define>

    <ui:define name="body">
        <tag:card id="example1" title="Basic usage of MP-RestClient">
            <ui:define name="body">
                <p>
                    In the first two examples you will learn how to call a service with the MP-RestClient. With JAX-RS it would probably look something like this:
                    <br/>
                    <code> Client client = ClientBuilder.newClient();
                        String response = client.target("http://localhost:8081/cheetahs").request().get(String.class); </code>
                    <br/>
                    With MP we can choose between CDI and the builder approach.
                    Try to fix the errors and solve the tasks.
                </p>
            </ui:define>
            <ui:define name="buttons">
                <tag:button id="builder" text="RestClientBuilder" path="/basic/restclient/restClientBuilder" />
                <tag:button id="cdi" text="CDI" path="/basic/restclient/cdi"/>
            </ui:define>

        </tag:card>

        <tag:card id="example2" title="Providers / ClientHeaders">
            <ui:define name="body">
                <p>
                    The <code>@RegisterProviders</code> annotation can be used to add
                    JAX-RS client providers and extensions. The <code>@RegisterClientHeaders</code> annotation
                    is used for registering an implementation of the interface ClientHeadersFactory which allows to read
                    incoming HTTP Headers and to define additional outgoing Http Headers. Solve the two tasks, <b>be aware the goal
                    from the first example is to map the error response code to a java Exception not to fix the error</b>.

                </p>
            </ui:define>
            <ui:define name="buttons">
                <tag:button id="exceptionMapping" text="Providers" path="/basic/restclient/exceptionMapping" />
                <tag:button id="headersFactory" text="ClientHeaders" path="/basic/restclient/headersFactory" />
            </ui:define>
        </tag:card>

        <tag:card id="example3" title="Generate RestClient from OpenAPI">
            <ui:define name="body">
                <p>
                    Generate resource from OpenAPI document with the OpenAPI Generator which
                    allows generation of API client libraries (SDK generation), server stubs,
                    documentation and configuration automatically given an OpenAPI Spec.
                </p>
            </ui:define>
            <ui:define name="buttons">
                <tag:button id="generateSources" text="Generate" path="/basic/restclient/generate" />
            </ui:define>
        </tag:card>
    </ui:define>
</ui:composition>

