<ui:composition template="/WEB-INF/layout/layout.xhtml" xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
    xmlns:tag="http://tags.microprofile.training.gepardec.com">

    <ui:define name="headerText">
        Microprofile Fault-Tolerance Basics
    </ui:define>

    <ui:define name="additionalNavLink">
        <tag:navLink id="toBasicIndex" path="/basic/index" text="Back"><i class="fas fa-step-backward" /></tag:navLink>
    </ui:define>

    <ui:define name="body">
        <section>
            <tag:card id="mp-faulttolerance-asynchronous" title="Asynchronous">
                <ui:define name="body">
                    <p>
                        Asynchronous invocations are used to invoke a method on another Thread, where the caller gets a <code>Future&lt;?&gt;</code> as a result.
                    </p>
                </ui:define>
                <ui:define name="buttons">
                    <tag:button id="toFaulttoleranceAsynchronous" text="Example" path="/basic/faulttolerance/asynchronous" />
                </ui:define>
            </tag:card>
        </section>

        <section>
            <tag:card id="mp-fallback-asynchronous" title="Fallback">
                <ui:define name="body">
                    <p>
                        Fallback defines a fallback result for a method invocation which fails, so that the caller always gets a result and doesn't have to deal with exceptions.
                    </p>
                </ui:define>
                <ui:define name="buttons">
                    <tag:button id="toFaulttoleranceFallback" text="Example" path="/basic/faulttolerance/fallback" />
                </ui:define>
            </tag:card>
        </section>

        <section>
            <tag:card id="mp-faulttolerance-timeout" title="Timeout">
                <ui:define name="body">
                    <p>
                        Timeout restricts method invocations to a defined time limit which avoids that hung processes reduce responsibility of the service.
                    </p>
                    <div class="alert alert-danger" role="alert">
                        Timeout behaviour doesn't replace SOAP/REST client timeout settings, which comonly default to indefiniete!!!
                    </div>
                </ui:define>
                <ui:define name="buttons">
                    <tag:button id="toFaulttoleranceTimeout" text="Example" path="/basic/faulttolerance/timeout" />
                </ui:define>
            </tag:card>
        </section>
    </ui:define>
</ui:composition>

