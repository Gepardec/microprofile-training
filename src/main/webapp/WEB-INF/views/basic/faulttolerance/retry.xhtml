<ui:composition template="/WEB-INF/layout/layout.xhtml" xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
    xmlns:tag="http://tags.microprofile.training.gepardec.com">

    <ui:define name="title">
        Microprofile Fault-Tolerance Basics (Retry)
    </ui:define>

    <ui:define name="body">
        <section>
            <div class="text-center">
                <h1>Retry</h1>
            </div>
            <div class="mt-3">
                <p>
                    The specification for Microprofile
                    <a href="#{mpUri.faultToleranceUri}#retry"
                        target="_blank">
                        Fault Tolerance (Retry)
                    </a>
                </p>

                <p>
                    Retry commonly is used to avoid errors on brief network glitches when either the network briefly is down, or a service redployment occurs.
                    The caller gets an increased latency because of the retries but no errors.
                </p>

                <hr class="my-3" />
            </div>

            <div class="row my-2">
                <div class="col">
                    <h4>
                        Your Task:
                    </h4>

                    <p>
                        Click the button below to trigger the call for retry and if the retry behaviours works as expected, then you see a increased latency because of the retries.
                        Define a retry behaviour as described in the class <code>com.gepardec.training.microprofile.basic.faulttolerance.RetryController#retried</code>.
                    </p>

                    <div class="text-center">
                        <tag:button id="callRetriedEndpoint" path="/basic/faulttolerance/retry/retried" text="Retry call" />
                    </div>
                </div>
            </div>

            <div class="row my-2 text-start font-weight-bold">
                <hr class="my-3" />

                <div class="col-sm me-sm-1">
                    Server Response:
                </div>
                <div class="col-sm ms-sm-1">
                    <span id="serverResponse" />
                </div>

                <hr class="my-3" />
            </div>

            <ui:insert name="bottom">
                <tag:timerDialog id="timer" title="Waiting for response..." text="Takes a little bit longer because of the retries" />

                <script>
                    document.addEventListener("DOMContentLoaded", (event) => {
                        document.getElementById("callRetriedEndpoint").addEventListener("click", (event) => {
                            event.preventDefault();
                            const serverResponse = document.getElementById("serverResponse");
                            serverResponse.innerText = "";
                            const modal = mdb.Modal.getInstance(document.getElementById('timer'))
                            modal.show();
                            fetch(event.target.href, {
                                method: "POST",
                            }).then((response) => {
                                let serverResponseText = `HTTP-Status: \${response.status}`;
                                response.text()
                                    .then((text) => serverResponseText += `, Content: \${text}`)
                                    .finally(() => serverResponse.innerText = serverResponseText);
                            }).finally(() => modal.hide());
                        });
                    });
                </script>
            </ui:insert>
        </section>
    </ui:define>
</ui:composition>
